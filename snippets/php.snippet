snippet func
	public function ${1}() {
	}

snippet pfunc
	private function ${1}() {
	}

snippet cont
	<?php
	App::uses('AppController', 'Controller');
	class ${1}Controller extends AppController {
		public $scaffold;
		public $components = array('Rest.Server');
	}

snippet model
	<?php
	class ${1} extends AppModel {
	}

# Layout variables
snippet cfl
	<?php echo $content_for_layout; ?>

snippet sfl
	<?php echo $scripts_for_layout; ?>

snippet tfl
	<?php echo $title_for_layout; ?>

# Form helper
snippet form
	<?php echo $this->Form->create(${1}); ?>

snippet end
	<?php echo $this->Form->end(${3}); ?>

snippet hid
	<?php echo $this->Form->hidden('${1}'); ?>

snippet in
	<?php echo $this->Form->input('${1}'); ?>

snippet submit
	<?php echo $this->Form->submit('${1}'); ?>

snippet textarea
	<?php echo $this->Form->textarea('${1}'); ?>

# HTML helper
snippet css
	<?php echo $this->Html->css('${1:filename}', array()); ?>

snippet img
	<?php echo $this->Html->image('${1:image.ext}'); ?>

snippet link
	<?php echo $this->Html->link('${1:text}', ${2:array('controller' => '${3:controller}', 'action' => '${4:action}')); ?>

snippet meta
	<?php echo $this->Html->meta('${1:type}'); ?>

snippet script
	<?php echo $this->Html->script('${1:filename}', array()); ?>

snippet style
	<?php echo $this->Html->style(${1:array($2)}$3); ?>

# Controller
snippet dela
	$this->${1:ModelName}->deleteAll(${2:$conditions}${3: ,$cascade});

snippet id=
	$this->${1:ModelName}->id = ${2:$id};

snippet save
	$this->${1:ModelName}->save(${2:$this->data});

snippet savef
	$this->${1:ModelName}->saveField('${2:$field}', ${3:$fieldValue});

snippet upa
	$this->${1:ModelName}->updateAll(${2:$fields}${3: ,$conditions});

snippet find
	$this->${1:ModelName}->find('${2:all}'${3: ,$params});

snippet findby
	$this->${1:ModelName}->findBy${2:FieldName}(${3:$value});

snippet findallby
	$this->${1:ModelName}->findAllBy${2:FieldName}(${3:$value}));

snippet field
	$this->${1:ModelName}->field(${2:'${3:name}'}, ${4:'conditions'}, ${5:'order'});

# Session component & helper
snippet sread
	$this->Session->read('${1:Controller}.${2:key}');

snippet sflash
	$this->Session->setFlash('${1:message}'${2:, 'default'}${3:, $params});

snippet swrite
	$this->Session->write('${1:Controller}.${2:key}', '${3:value}');

# Assert
snippet assertE
	$this->assertEqual(${1:$result}, ${2:$expected});

snippet assertF
	$this->assertFalse(${1:$result});

snippet assertP
	$this->assertPattern(${1:'/${2:pattern}/'}, ${3:$result});

snippet assertT
	$this->assertTrue(${1:$result});


# Misc
snippet echo
	<?php echo $${1:data}['${2:Model}']['${3:field}']; ?>

snippet elem
	<?php echo $this->element('${1:element}'$0); ?>

snippet de
	debug($${1:data});

snippet pr
	pr($${1:data});

snippet set
	$this->set('${1:var}', $${2:$1});

snippet re
	$this->redirect(array('controller' => '${1:controller}', 'action' => '${2:action}'));

snippet ren
	$this->render(${1:'action'});

snippet app
	App::use('${1:ClassName}'${2:, 'Folder'});

snippet cr
	ClassRegistry::init('${1:ModelName}');

snippet configr
	Configure::read('')

snippet configw
	Configure::write('$1', $2);

snippet afterfil
	/**
	 * Controller afterFilter callback.
	 * Called after the controller action is run and rendered.
	 *
	 * @return void
	 */
	function afterFilter() {
        parent::afterFilter();
		$1
	}

snippet beforefil
	/**
	 * Controller beforeFilter callback.
	 * Called before the controller action.
	 *
	 * @return void
	 */
	function beforeFilter() {
        parent::beforeFilter();
		$1
	}

snippet beforeren
	/**
	 * Controller afterFilter callback.
	 * Called after the controller action is run, but before the view is rendered.
	 *
	 * @return void
	 */
	function beforeRender() {
        parent::beforeRender();
		$1
	}

# Inflector
snippet infcam
	Inflector::camelize(${1:$word})

snippet infclass
	Inflector::classify(${1:$word})

snippet infhum
	Inflector::humanize(${1:$word})

snippet infplur
	Inflector::pluralize(${1:$word})

snippet infsing
	Inflector::singularize(${1:$word})

snippet infslug
	Inflector::slug(${1:$word})

snippet inftab
	Inflector::tabelize(${1:$word})

snippet infunder
	Inflector::underscore(${1:$word})

snippet infvar
	Inflector::variable(${1:$word})

# Callback methods

snippet beforeFind
	function beforeFind($query) {
        parent::beforeFind($query);
		${1}
	}

snippet afterFind
	function afterFind($results, $primary = false) {
        parent::afterFind($results, $primary);
		${1}
	}

snippet beforeSave
	function beforeSave($options = array()) {
        parent::beforeSave($options);
		${1}
	}

snippet afterSave
	function afterSave($created, $options = array()) {
        parent::afterSave($options);
		${1}
	}

snippet beforeDelete
	function beforeDelete($cascade = true) {
        parent::beforeDelete($cascade);
		${1}
	}

snippet afterDelete
	function afterDelete() {
        parent::afterDelete();
		${1}
	}

snippet beforeValidate
	function beforeValidate($options = true) {
        parent::beforeValidate($options);
		${1}
	}

snippet afterValidate
	function afterValidate() {
        parent::afterValidate();
		${1}
	}

snippet __
	__('${1}', '');

snippet __p
	<?php echo __('${1}', ''); ?>


# Model
snippet act
	var $actsAs = array('${1:BehaviorName}'${2: => ConfigForBehavior});

snippet bt
	var $belongsTo = array('${1:Model}');

snippet habtm
	var $hasAndBelongsToMany = array('${1:Model}');

snippet hm
	var $hasMany = array('${1:Model}');

snippet ho
	var $hasOne = array('${1:Model}');
